generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id              Int        @id @default(autoincrement())
  content         String?
  fingerprintHash String
  parentPostId    Int?
  createdAt       DateTime   @default(now())

  // Defines the self-relation for threaded replies
  parent          Post?      @relation("Thread", fields: [parentPostId], references: [id], onDelete: Cascade)
  replies         Post[]     @relation("Thread")

  // Relation to other models
  stats           PostStats?
  votes           Vote[]
  reports         Report[]   // Add this relation

  @@index([createdAt])
}

model Report {
  id              Int      @id @default(autoincrement())
  postId          Int
  fingerprintHash String
  reason          String?
  createdAt       DateTime @default(now())

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([postId, fingerprintHash]) // A user can only report a post once
}

model PostStats {
  postId      Int      @id
  upvotes     Int      @default(0)
  downvotes   Int      @default(0)
  replyCount  Int      @default(0)
  hotnessScore Int     @default(0)

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Vote {
  id              Int      @id @default(autoincrement())
  postId          Int
  fingerprintHash String
  voteType        Int // 1 for upvote, -1 for downvote

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([postId, fingerprintHash])
}

model UserAnonymizedProfile {
  fingerprintHash   String    @id
  codename          String
  purifiedPostCount Int       @default(0)
  isBanned          Boolean   @default(false)
  banExpiresAt      DateTime?
  firstSeenAt       DateTime  @default(now())
  lastSeenAt        DateTime  @default(now())
}

model AdminLog {
  id                    Int       @id @default(autoincrement())
  targetFingerprintHash String
  action                String
  adminId               String
  reason                String?
  createdAt             DateTime  @default(now())
  isAcknowledged        Boolean   @default(false) 
}